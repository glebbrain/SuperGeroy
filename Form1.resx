<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <data name="textBox7.Text" xml:space="preserve">
    <value>Легенда:
.* - оставляет текущее расширение файла
? - вставляет/заменяет на число по порядку от 1 по +1
" - вставляет/заменяет на букву английского алфавита по порядку от a до z
&lt;?0+3&gt; - числа начинаются на 0 с шагом 3, т.е.: 0,3,6,9,12,..
&lt;"1+4&gt; - букваы начинаются на "a" с шагом 4, т.е.: a,e,i,m,..</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEAIACoEAAAJgAAABAQAAABACAAaAQAAM4QAAAoAAAAIAAAAEAAAAABACAAAAAAAIAQ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAA0AAAAVAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAEAAAAAUAAAAAAAAAAAAAAAAAAAANAAAAKwAAAD8AAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEMAAABDAAAAQwAA
        AEMAAABDAAAAQwAAAEMAAABDAAAAQwAAAEIAAAAxAAAAEAAAAAAAAAAAAAAAAAAAABSeVADEsF4A/7Be
        AP+wXgD/s2AA/3Q/AP+zYAD/sF4A/7BeAP+zYAD/vGMA/6JVEv8qHbv/Bw7q/yofu/+jVhL/vGMA/7Ng
        AP+wXgD/sF4A/7NgAP95QQD/s2AA/7BeAP+wXgD/sF4A/61dAPMAAAAWAAAAAAAAAAAAAAAAAAAAFbBe
        AP+0ZAf/tGEA/7RhAP+3YwD/kk4A/7djAP+2YgD/umMA/8NmAP9vO2D/AAP7/wgF6/8MCOf/Cgzs/wEN
        /P9wQmD/xGgA/7pkAP+2YgD/t2MA/5JOAP+2YgD/tGEA/7RhAP+0ZAf/sF4A/wAAABUAAAAAAAAAAAAA
        AAAAAAARrlwA9rlrDv+6ZQH/u2QA/71lAP+WUAD/wGYA/8VoAP/BZQD/MSC+/w8u//84wP//Rev//0fu
        //8znvv/DhDw/wgS/P8zJ77/wWYA/8VoAP/AZgD/p1kA/71lAP+7ZAD/umUA/7psEP+uXAD2AAAAEQAA
        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
</value>
  </data>
</root>